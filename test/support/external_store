#!/usr/bin/env python
import base64
import json
import pickle
import os
import sys

DATABASE = "teststore.db"

routes = {}

def write():
    with open(DATABASE, "w") as file:
        pickle.dump(routes, file)

if not os.path.exists(DATABASE):
    write()

with open(DATABASE, "r") as file:
    routes = pickle.load(file)

def get(path):
    route = routes.get(path, None)
    if not route:
        sys.exit(1)

    print(route)

def get_all():
    print(json.dumps(routes))

def add(path, data):
    routes[path] = data
    write()

def update(path, data):
    existing = json.loads(base64.b64decode(routes[path]))
    updates  = json.loads(base64.b64decode(data))
    existing.update(updates)

    routes[path] = base64.b64encode(json.dumps(existing))
    write()

def remove(path):
    del routes[path]
    write()

def defined(path):
    return routes[path] is not None

args = sys.argv[1:]

commands = {
    "get": lambda args: get(args[0]),
    "get_all": lambda args: get_all(),
    "add": lambda args: add(args[0], args[1]),
    "update": lambda args: update(args[0], args[1]),
    "remove": lambda args: remove(args[0]),
    "exists": lambda args: defined(args[0])
}.get(args[0])(args[1:])
